{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xA52346C9cfAE3b4AAdaE11eE8d07B888fe82631D",
      "txHash": "0xb23431feaf01d02d69cd56d5302b8ca422c295e5d087f9c095b951db397bb566",
      "kind": "transparent"
    },
    {
      "address": "0x2885306B141E9164874671F1e272b2D60c6d4CC6",
      "txHash": "0xa9ea401161d37d2b9660bde69c80371740eea5638ede3b60c939618603de1e5f",
      "kind": "transparent"
    },
    {
      "address": "0xc37D3907C0a827ceC371fBf43B24EcE47474791a",
      "txHash": "0x2fa8ba5edc9f0495e4f71bb86fde14637ac034cab909b8a94743526259fad264",
      "kind": "transparent"
    },
    {
      "address": "0x863C3093f15284ad01410CA82d67c1817858b324",
      "txHash": "0x63457692aee180571b9ca5b2164e85570b8187af50bb8fa12cbcf193d1f41c93",
      "kind": "transparent"
    },
    {
      "address": "0xaC58960193deDFF84BcbbBEd952862fF87588f69",
      "txHash": "0x812088eab69b406178b0f803adfcc13e3a95945bdbbaa14e41eb9a8008b0df62",
      "kind": "transparent"
    },
    {
      "address": "0x2E72FAe34613f3AB8A8c0B837Bfc2A2C98f485d2",
      "txHash": "0x8ac96e2405b33593775c5adef06fb468321eef8fbfeca3e2a3b85bcc098950f5",
      "kind": "transparent"
    }
  ],
  "impls": {
    "39a60020fba0684343738c637098bb3b29749a9fb0b871b50285e41949248676": {
      "address": "0x8e4E076cD39ac54969fCaf917891D7451E90f499",
      "txHash": "0x7dd85103c17d332085a783917bf744b0e30b83348fdba8f79d846b3459d75912",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "controllers",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ControllableUpgradeable",
            "src": "contracts\\common\\ControllableUpgradeable.sol:12"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:10"
          },
          {
            "label": "LPWANFee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:11"
          },
          {
            "label": "isMarketPair",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:13"
          },
          {
            "label": "permitSwapBuying",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:14"
          },
          {
            "label": "permitSwapSelling",
            "offset": 1,
            "slot": "4",
            "type": "t_bool",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:15"
          },
          {
            "label": "_inWhitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:16"
          },
          {
            "label": "totalTaxIfBuying",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:17"
          },
          {
            "label": "totalTaxIfSelling",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:18"
          },
          {
            "label": "burnRatio",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:19"
          },
          {
            "label": "burnAddress",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)426_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)201_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)374_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b59ea1321b06bd3bade24010d8ac6608984274dd79b7b8d7754ed7951adc1bcb": {
      "address": "0x986977Bd4099B9F178142A19efdcbc3D083479C8",
      "txHash": "0xe440a98f39eb7e9976405a73f5df31a944bcbcc4650b757fb25d206b38b802ba",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "controllers",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ControllableUpgradeable",
            "src": "contracts\\common\\ControllableUpgradeable.sol:12"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:10"
          },
          {
            "label": "LPWANFee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:11"
          },
          {
            "label": "isMarketPair",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:13"
          },
          {
            "label": "permitSwapBuying",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:14"
          },
          {
            "label": "permitSwapSelling",
            "offset": 1,
            "slot": "4",
            "type": "t_bool",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:15"
          },
          {
            "label": "_inWhitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:16"
          },
          {
            "label": "totalTaxIfBuying",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:17"
          },
          {
            "label": "totalTaxIfSelling",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:18"
          },
          {
            "label": "burnRatio",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:19"
          },
          {
            "label": "burnAddress",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:20"
          },
          {
            "label": "_poolers",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:21"
          },
          {
            "label": "_poolersAmount",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)371_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)146_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)319_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "81e4a27d02df95d3b0ad4a730c223f49a753f26357691f5b0c9009a79fc804f3": {
      "address": "0x9F50a56C806e4D34A5F0D5f733ec6D76E75778aa",
      "txHash": "0x0aefe2c8c8e8e2344e9a1f7a7b7e06aa6ebefeae02f3621216c3def455fd7b6a",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "controllers",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ControllableUpgradeable",
            "src": "contracts\\common\\ControllableUpgradeable.sol:12"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:10"
          },
          {
            "label": "LPWANFee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:11"
          },
          {
            "label": "isMarketPair",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:13"
          },
          {
            "label": "permitSwapBuying",
            "offset": 0,
            "slot": "4",
            "type": "t_bool",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:14"
          },
          {
            "label": "permitSwapSelling",
            "offset": 1,
            "slot": "4",
            "type": "t_bool",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:15"
          },
          {
            "label": "_inWhitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:16"
          },
          {
            "label": "totalTaxIfBuying",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:17"
          },
          {
            "label": "totalTaxIfSelling",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:18"
          },
          {
            "label": "burnRatio",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:19"
          },
          {
            "label": "burnAddress",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:20"
          },
          {
            "label": "_poolers",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:21"
          },
          {
            "label": "_poolersAmount",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Smart",
            "src": "contracts\\Smart.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)371_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)146_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)319_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
